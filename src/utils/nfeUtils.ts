
import { create } from 'xmlbuilder2';

export function gerarXmlNFe(dados: any) {
  const doc = create({ version: '1.0', encoding: 'UTF-8' })
    .ele('NFe', { xmlns: 'http://www.portalfiscal.inf.br/nfe' })
    .ele('infNFe', {
      Id: `NFe${dados.chave}`,
      versao: '4.00',
    })
    .ele('ide')
      .ele('cUF').txt(dados.ide.cUF).up()
      .ele('cNF').txt(dados.ide.cNF).up()
      .ele('natOp').txt(dados.ide.natOp).up()
      .ele('mod').txt(dados.ide.mod).up()
      .ele('serie').txt(dados.ide.serie).up()
      .ele('nNF').txt(dados.ide.nNF).up()
      .ele('dhEmi').txt(dados.ide.dhEmi).up()
      .ele('tpNF').txt(dados.ide.tpNF).up()
      .ele('idDest').txt(dados.ide.idDest).up()
      .ele('cMunFG').txt(dados.ide.cMunFG).up()
      .ele('tpImp').txt(dados.ide.tpImp).up()
      .ele('tpEmis').txt(dados.ide.tpEmis).up()
      .ele('cDV').txt(dados.ide.cDV).up()
      .ele('tpAmb').txt(dados.ide.tpAmb).up()
      .ele('finNFe').txt(dados.ide.finNFe).up()
      .ele('indFinal').txt(dados.ide.indFinal).up()
      .ele('indPres').txt(dados.ide.indPres).up()
      .ele('procEmi').txt(dados.ide.procEmi).up()
      .ele('verProc').txt(dados.ide.verProc).up().up()
    .ele('emit')
      .ele('CNPJ').txt(dados.emit.CNPJ).up()
      .ele('xNome').txt(dados.emit.xNome).up()
      .ele('enderEmit')
        .ele('xLgr').txt(dados.emit.enderEmit.xLgr).up()
        .ele('nro').txt(dados.emit.enderEmit.nro).up()
        .ele('xBairro').txt(dados.emit.enderEmit.xBairro).up()
        .ele('cMun').txt(dados.emit.enderEmit.cMun).up()
        .ele('xMun').txt(dados.emit.enderEmit.xMun).up()
        .ele('UF').txt(dados.emit.enderEmit.UF).up()
        .ele('CEP').txt(dados.emit.enderEmit.CEP).up()
        .ele('cPais').txt(dados.emit.enderEmit.cPais).up()
        .ele('xPais').txt(dados.emit.enderEmit.xPais).up().up()
      .ele('IE').txt(dados.emit.IE).up()
      .ele('CRT').txt(dados.emit.CRT).up().up()
    .ele('dest')
      .ele('CPF').txt(dados.dest.CPF).up()
      .ele('xNome').txt(dados.dest.xNome).up()
      .ele('enderDest')
        .ele('xLgr').txt(dados.dest.enderDest.xLgr).up()
        .ele('nro').txt(dados.dest.enderDest.nro).up()
        .ele('xBairro').txt(dados.dest.enderDest.xBairro).up()
        .ele('cMun').txt(dados.dest.enderDest.cMun).up()
        .ele('xMun').txt(dados.dest.enderDest.xMun).up()
        .ele('UF').txt(dados.dest.enderDest.UF).up()
        .ele('CEP').txt(dados.dest.enderDest.CEP).up()
        .ele('cPais').txt(dados.dest.enderDest.cPais).up()
        .ele('xPais').txt(dados.dest.enderDest.xPais).up().up()
      .ele('indIEDest').txt(dados.dest.indIEDest).up().up()
    .ele('det', { nItem: '1' })
      .ele('prod')
        .ele('cProd').txt(dados.prod.cProd).up()
        .ele('cEAN').txt(dados.prod.cEAN).up()
        .ele('xProd').txt(dados.prod.xProd).up()
        .ele('NCM').txt(dados.prod.NCM).up()
        .ele('CFOP').txt(dados.prod.CFOP).up()
        .ele('uCom').txt(dados.prod.uCom).up()
        .ele('qCom').txt(dados.prod.qCom).up()
        .ele('vUnCom').txt(dados.prod.vUnCom).up()
        .ele('vProd').txt(dados.prod.vProd).up()
        .ele('cEANTrib').txt(dados.prod.cEANTrib).up()
        .ele('uTrib').txt(dados.prod.uTrib).up()
        .ele('qTrib').txt(dados.prod.qTrib).up()
        .ele('vUnTrib').txt(dados.prod.vUnTrib).up()
        .ele('indTot').txt(dados.prod.indTot).up().up()
      .ele('imposto')
        .ele('ICMS')
          .ele('ICMS00')
            .ele('orig').txt(dados.imposto.orig).up()
            .ele('CST').txt(dados.imposto.CST).up()
            .ele('modBC').txt(dados.imposto.modBC).up()
            .ele('vBC').txt(dados.imposto.vBC).up()
            .ele('pICMS').txt(dados.imposto.pICMS).up()
            .ele('vICMS').txt(dados.imposto.vICMS).up().up().up().up()
    .ele('total')
      .ele('ICMSTot')
        .ele('vBC').txt(dados.total.vBC).up()
        .ele('vICMS').txt(dados.total.vICMS).up()
        .ele('vProd').txt(dados.total.vProd).up()
        .ele('vNF').txt(dados.total.vNF).up().up().up()
    .ele('transp')
      .ele('modFrete').txt(dados.transp.modFrete).up().up()
    .up();

  return doc.end({ prettyPrint: true });
}
